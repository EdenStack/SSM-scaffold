<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.SensorMapper">
  <resultMap id="BaseResultMap" type="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="demodulator_serial" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="channel_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="bridge_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lane_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="vendor" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="longitude" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="latitude" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="max_wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="min_wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="compensation_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="k" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="ord" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="next_device_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="bridge_head_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="bridge_tail_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="areamethod_parameter_a" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="areamethod_parameter_b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="peakmethod_parameter_a" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="peakmethod_parameter_b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="created_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="demodulator_serial" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="channel_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="bridge_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="lane_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="vendor" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="longitude" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="latitude" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="max_wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="min_wave_len" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="compensation_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="k" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="ord" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="next_device_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="bridge_head_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="bridge_tail_distance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="areamethod_parameter_a" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="areamethod_parameter_b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="peakmethod_parameter_a" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="peakmethod_parameter_b" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="created_by" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remarks" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    code, name, demodulator_serial, channel_id, bridge_id, lane_id, type, vendor, longitude, 
    latitude, wave_len, max_wave_len, min_wave_len, compensation_code, k, b, ord, next_device_distance, 
    bridge_head_distance, bridge_tail_distance, areamethod_parameter_a, areamethod_parameter_b, 
    peakmethod_parameter_a, peakmethod_parameter_b, status, created, created_by
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    remarks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="entity.SensorExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="entity.SensorExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sensor
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sensor
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="entity.SensorExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sensor (code, name, demodulator_serial, 
      channel_id, bridge_id, lane_id, 
      type, vendor, longitude, 
      latitude, wave_len, max_wave_len, 
      min_wave_len, compensation_code, k, 
      b, ord, next_device_distance, 
      bridge_head_distance, bridge_tail_distance, areamethod_parameter_a, 
      areamethod_parameter_b, peakmethod_parameter_a, 
      peakmethod_parameter_b, status, created, 
      created_by, remarks)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{demodulatorSerial,jdbcType=VARCHAR}, 
      #{channelId,jdbcType=INTEGER}, #{bridgeId,jdbcType=INTEGER}, #{laneId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{vendor,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=VARCHAR}, #{waveLen,jdbcType=DOUBLE}, #{maxWaveLen,jdbcType=DOUBLE}, 
      #{minWaveLen,jdbcType=DOUBLE}, #{compensationCode,jdbcType=VARCHAR}, #{k,jdbcType=DOUBLE}, 
      #{b,jdbcType=DOUBLE}, #{ord,jdbcType=INTEGER}, #{nextDeviceDistance,jdbcType=DOUBLE}, 
      #{bridgeHeadDistance,jdbcType=DOUBLE}, #{bridgeTailDistance,jdbcType=DOUBLE}, #{areamethodParameterA,jdbcType=DOUBLE}, 
      #{areamethodParameterB,jdbcType=DOUBLE}, #{peakmethodParameterA,jdbcType=DOUBLE}, 
      #{peakmethodParameterB,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR}, #{created,jdbcType=DATE}, 
      #{createdBy,jdbcType=VARCHAR}, #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sensor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="demodulatorSerial != null">
        demodulator_serial,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="bridgeId != null">
        bridge_id,
      </if>
      <if test="laneId != null">
        lane_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="vendor != null">
        vendor,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="waveLen != null">
        wave_len,
      </if>
      <if test="maxWaveLen != null">
        max_wave_len,
      </if>
      <if test="minWaveLen != null">
        min_wave_len,
      </if>
      <if test="compensationCode != null">
        compensation_code,
      </if>
      <if test="k != null">
        k,
      </if>
      <if test="b != null">
        b,
      </if>
      <if test="ord != null">
        ord,
      </if>
      <if test="nextDeviceDistance != null">
        next_device_distance,
      </if>
      <if test="bridgeHeadDistance != null">
        bridge_head_distance,
      </if>
      <if test="bridgeTailDistance != null">
        bridge_tail_distance,
      </if>
      <if test="areamethodParameterA != null">
        areamethod_parameter_a,
      </if>
      <if test="areamethodParameterB != null">
        areamethod_parameter_b,
      </if>
      <if test="peakmethodParameterA != null">
        peakmethod_parameter_a,
      </if>
      <if test="peakmethodParameterB != null">
        peakmethod_parameter_b,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="demodulatorSerial != null">
        #{demodulatorSerial,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="bridgeId != null">
        #{bridgeId,jdbcType=INTEGER},
      </if>
      <if test="laneId != null">
        #{laneId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="waveLen != null">
        #{waveLen,jdbcType=DOUBLE},
      </if>
      <if test="maxWaveLen != null">
        #{maxWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="minWaveLen != null">
        #{minWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="compensationCode != null">
        #{compensationCode,jdbcType=VARCHAR},
      </if>
      <if test="k != null">
        #{k,jdbcType=DOUBLE},
      </if>
      <if test="b != null">
        #{b,jdbcType=DOUBLE},
      </if>
      <if test="ord != null">
        #{ord,jdbcType=INTEGER},
      </if>
      <if test="nextDeviceDistance != null">
        #{nextDeviceDistance,jdbcType=DOUBLE},
      </if>
      <if test="bridgeHeadDistance != null">
        #{bridgeHeadDistance,jdbcType=DOUBLE},
      </if>
      <if test="bridgeTailDistance != null">
        #{bridgeTailDistance,jdbcType=DOUBLE},
      </if>
      <if test="areamethodParameterA != null">
        #{areamethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="areamethodParameterB != null">
        #{areamethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="peakmethodParameterA != null">
        #{peakmethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="peakmethodParameterB != null">
        #{peakmethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.SensorExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.demodulatorSerial != null">
        demodulator_serial = #{record.demodulatorSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.bridgeId != null">
        bridge_id = #{record.bridgeId,jdbcType=INTEGER},
      </if>
      <if test="record.laneId != null">
        lane_id = #{record.laneId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.vendor != null">
        vendor = #{record.vendor,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.waveLen != null">
        wave_len = #{record.waveLen,jdbcType=DOUBLE},
      </if>
      <if test="record.maxWaveLen != null">
        max_wave_len = #{record.maxWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="record.minWaveLen != null">
        min_wave_len = #{record.minWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="record.compensationCode != null">
        compensation_code = #{record.compensationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.k != null">
        k = #{record.k,jdbcType=DOUBLE},
      </if>
      <if test="record.b != null">
        b = #{record.b,jdbcType=DOUBLE},
      </if>
      <if test="record.ord != null">
        ord = #{record.ord,jdbcType=INTEGER},
      </if>
      <if test="record.nextDeviceDistance != null">
        next_device_distance = #{record.nextDeviceDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.bridgeHeadDistance != null">
        bridge_head_distance = #{record.bridgeHeadDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.bridgeTailDistance != null">
        bridge_tail_distance = #{record.bridgeTailDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.areamethodParameterA != null">
        areamethod_parameter_a = #{record.areamethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="record.areamethodParameterB != null">
        areamethod_parameter_b = #{record.areamethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="record.peakmethodParameterA != null">
        peakmethod_parameter_a = #{record.peakmethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="record.peakmethodParameterB != null">
        peakmethod_parameter_b = #{record.peakmethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=DATE},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    set code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      demodulator_serial = #{record.demodulatorSerial,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      bridge_id = #{record.bridgeId,jdbcType=INTEGER},
      lane_id = #{record.laneId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      vendor = #{record.vendor,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      wave_len = #{record.waveLen,jdbcType=DOUBLE},
      max_wave_len = #{record.maxWaveLen,jdbcType=DOUBLE},
      min_wave_len = #{record.minWaveLen,jdbcType=DOUBLE},
      compensation_code = #{record.compensationCode,jdbcType=VARCHAR},
      k = #{record.k,jdbcType=DOUBLE},
      b = #{record.b,jdbcType=DOUBLE},
      ord = #{record.ord,jdbcType=INTEGER},
      next_device_distance = #{record.nextDeviceDistance,jdbcType=DOUBLE},
      bridge_head_distance = #{record.bridgeHeadDistance,jdbcType=DOUBLE},
      bridge_tail_distance = #{record.bridgeTailDistance,jdbcType=DOUBLE},
      areamethod_parameter_a = #{record.areamethodParameterA,jdbcType=DOUBLE},
      areamethod_parameter_b = #{record.areamethodParameterB,jdbcType=DOUBLE},
      peakmethod_parameter_a = #{record.peakmethodParameterA,jdbcType=DOUBLE},
      peakmethod_parameter_b = #{record.peakmethodParameterB,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=DATE},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    set code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      demodulator_serial = #{record.demodulatorSerial,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      bridge_id = #{record.bridgeId,jdbcType=INTEGER},
      lane_id = #{record.laneId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      vendor = #{record.vendor,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      wave_len = #{record.waveLen,jdbcType=DOUBLE},
      max_wave_len = #{record.maxWaveLen,jdbcType=DOUBLE},
      min_wave_len = #{record.minWaveLen,jdbcType=DOUBLE},
      compensation_code = #{record.compensationCode,jdbcType=VARCHAR},
      k = #{record.k,jdbcType=DOUBLE},
      b = #{record.b,jdbcType=DOUBLE},
      ord = #{record.ord,jdbcType=INTEGER},
      next_device_distance = #{record.nextDeviceDistance,jdbcType=DOUBLE},
      bridge_head_distance = #{record.bridgeHeadDistance,jdbcType=DOUBLE},
      bridge_tail_distance = #{record.bridgeTailDistance,jdbcType=DOUBLE},
      areamethod_parameter_a = #{record.areamethodParameterA,jdbcType=DOUBLE},
      areamethod_parameter_b = #{record.areamethodParameterB,jdbcType=DOUBLE},
      peakmethod_parameter_a = #{record.peakmethodParameterA,jdbcType=DOUBLE},
      peakmethod_parameter_b = #{record.peakmethodParameterB,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=DATE},
      created_by = #{record.createdBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="demodulatorSerial != null">
        demodulator_serial = #{demodulatorSerial,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="bridgeId != null">
        bridge_id = #{bridgeId,jdbcType=INTEGER},
      </if>
      <if test="laneId != null">
        lane_id = #{laneId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        vendor = #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="waveLen != null">
        wave_len = #{waveLen,jdbcType=DOUBLE},
      </if>
      <if test="maxWaveLen != null">
        max_wave_len = #{maxWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="minWaveLen != null">
        min_wave_len = #{minWaveLen,jdbcType=DOUBLE},
      </if>
      <if test="compensationCode != null">
        compensation_code = #{compensationCode,jdbcType=VARCHAR},
      </if>
      <if test="k != null">
        k = #{k,jdbcType=DOUBLE},
      </if>
      <if test="b != null">
        b = #{b,jdbcType=DOUBLE},
      </if>
      <if test="ord != null">
        ord = #{ord,jdbcType=INTEGER},
      </if>
      <if test="nextDeviceDistance != null">
        next_device_distance = #{nextDeviceDistance,jdbcType=DOUBLE},
      </if>
      <if test="bridgeHeadDistance != null">
        bridge_head_distance = #{bridgeHeadDistance,jdbcType=DOUBLE},
      </if>
      <if test="bridgeTailDistance != null">
        bridge_tail_distance = #{bridgeTailDistance,jdbcType=DOUBLE},
      </if>
      <if test="areamethodParameterA != null">
        areamethod_parameter_a = #{areamethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="areamethodParameterB != null">
        areamethod_parameter_b = #{areamethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="peakmethodParameterA != null">
        peakmethod_parameter_a = #{peakmethodParameterA,jdbcType=DOUBLE},
      </if>
      <if test="peakmethodParameterB != null">
        peakmethod_parameter_b = #{peakmethodParameterB,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    set name = #{name,jdbcType=VARCHAR},
      demodulator_serial = #{demodulatorSerial,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=INTEGER},
      bridge_id = #{bridgeId,jdbcType=INTEGER},
      lane_id = #{laneId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      vendor = #{vendor,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      wave_len = #{waveLen,jdbcType=DOUBLE},
      max_wave_len = #{maxWaveLen,jdbcType=DOUBLE},
      min_wave_len = #{minWaveLen,jdbcType=DOUBLE},
      compensation_code = #{compensationCode,jdbcType=VARCHAR},
      k = #{k,jdbcType=DOUBLE},
      b = #{b,jdbcType=DOUBLE},
      ord = #{ord,jdbcType=INTEGER},
      next_device_distance = #{nextDeviceDistance,jdbcType=DOUBLE},
      bridge_head_distance = #{bridgeHeadDistance,jdbcType=DOUBLE},
      bridge_tail_distance = #{bridgeTailDistance,jdbcType=DOUBLE},
      areamethod_parameter_a = #{areamethodParameterA,jdbcType=DOUBLE},
      areamethod_parameter_b = #{areamethodParameterB,jdbcType=DOUBLE},
      peakmethod_parameter_a = #{peakmethodParameterA,jdbcType=DOUBLE},
      peakmethod_parameter_b = #{peakmethodParameterB,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      created = #{created,jdbcType=DATE},
      created_by = #{createdBy,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Sensor">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor
    set name = #{name,jdbcType=VARCHAR},
      demodulator_serial = #{demodulatorSerial,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=INTEGER},
      bridge_id = #{bridgeId,jdbcType=INTEGER},
      lane_id = #{laneId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      vendor = #{vendor,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      wave_len = #{waveLen,jdbcType=DOUBLE},
      max_wave_len = #{maxWaveLen,jdbcType=DOUBLE},
      min_wave_len = #{minWaveLen,jdbcType=DOUBLE},
      compensation_code = #{compensationCode,jdbcType=VARCHAR},
      k = #{k,jdbcType=DOUBLE},
      b = #{b,jdbcType=DOUBLE},
      ord = #{ord,jdbcType=INTEGER},
      next_device_distance = #{nextDeviceDistance,jdbcType=DOUBLE},
      bridge_head_distance = #{bridgeHeadDistance,jdbcType=DOUBLE},
      bridge_tail_distance = #{bridgeTailDistance,jdbcType=DOUBLE},
      areamethod_parameter_a = #{areamethodParameterA,jdbcType=DOUBLE},
      areamethod_parameter_b = #{areamethodParameterB,jdbcType=DOUBLE},
      peakmethod_parameter_a = #{peakmethodParameterA,jdbcType=DOUBLE},
      peakmethod_parameter_b = #{peakmethodParameterB,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      created = #{created,jdbcType=DATE},
      created_by = #{createdBy,jdbcType=VARCHAR}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>